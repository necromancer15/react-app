{"version":3,"sources":["img sync /^/.*/.jpg$","img/ainz.jpg","img/elias.jpg","img/esdeath.jpg","img/glenn.jpg","img/gslayer.jpg","img/iori.jpg","img/kazuma.jpg","img/madara.jpg","img/megumin.jpg","img/mikasa.jpg","img/milim.jpg","img/rem.jpg","img/rory.jpg","img/satan.jpg","img/shalltear.jpg","img/tanya.jpg","components/Card.js","components/CardList.js","components/BarraBusqueda.js","personajes.js","containers/App.js","serviceWorker.js","index.js"],"names":["map","./ainz.jpg","./elias.jpg","./esdeath.jpg","./glenn.jpg","./gslayer.jpg","./iori.jpg","./kazuma.jpg","./madara.jpg","./megumin.jpg","./mikasa.jpg","./milim.jpg","./rem.jpg","./rory.jpg","./satan.jpg","./shalltear.jpg","./tanya.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Card","react_default","a","createElement","className","imagen","this","props","nombre","url","onClick","onOpenModal","alt","src","require","concat","anime","React","Component","CardList","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","setState","open","target","parentElement","getAttribute","onCloseModal","state","_this2","cardArray","personajes","user","i","src_components_Card","key","index_es","onClose","little","BarraBusqueda","_ref","campobusqueda","searchChange","type","placeholder","onChange","App","onSearchChange","value","_this$state","pjFiltrados","filter","personaje","toLowerCase","includes","components_BarraBusqueda","src_components_CardList","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f1c58d9e.chunk.js","sourcesContent":["var map = {\n\t\"./ainz.jpg\": 27,\n\t\"./elias.jpg\": 28,\n\t\"./esdeath.jpg\": 29,\n\t\"./glenn.jpg\": 30,\n\t\"./gslayer.jpg\": 31,\n\t\"./iori.jpg\": 32,\n\t\"./kazuma.jpg\": 33,\n\t\"./madara.jpg\": 34,\n\t\"./megumin.jpg\": 35,\n\t\"./mikasa.jpg\": 36,\n\t\"./milim.jpg\": 37,\n\t\"./rem.jpg\": 38,\n\t\"./rory.jpg\": 39,\n\t\"./satan.jpg\": 40,\n\t\"./shalltear.jpg\": 41,\n\t\"./tanya.jpg\": 42\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 12;","module.exports = __webpack_public_path__ + \"static/media/ainz.de81acff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elias.3285df2c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/esdeath.00fb72d6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/glenn.ba368045.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gslayer.c529adfb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iori.60006d48.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kazuma.5bb60cb7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/madara.89c9491b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/megumin.8c8d925d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mikasa.a6a9241a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/milim.5d9f9404.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rem.82ffe5b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rory.fd51db74.jpg\";","module.exports = __webpack_public_path__ + \"static/media/satan.69dfb041.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shalltear.74b25ee9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tanya.b92d86b3.jpg\";","import React from 'react';\r\nimport './Card.css';\r\n\r\nclass Card extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='tc bg-near-white dib br3 pa3 ma2 grow bw2 shadow-5 tarjeta' imagen={this.props.imagen} nombre={this.props.nombre} url={this.props.url} onClick={this.props.onOpenModal}>\r\n\t\t\t\t<img alt='imagen' src={require(`../img/${this.props.imagen}.jpg`)}/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{this.props.nombre}</h2>\r\n\t\t\t\t\t<p>{this.props.anime}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport './CardList.css';\r\nimport Card from './Card';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nclass CardList extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\topen: false,\r\n\t\t\timagen: 'ainz',\r\n\t\t\tnombre: '',\r\n\t\t\turl: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonOpenModal = (event) => {\r\n    \tthis.setState({ open: true });\r\n    \tthis.setState({ imagen: event.target.parentElement.getAttribute('imagen') });\r\n    \tthis.setState({ nombre: event.target.parentElement.getAttribute('nombre') });\r\n    \tthis.setState({ url: event.target.parentElement.getAttribute('url') });\r\n  \t};\r\n\r\n  \tonCloseModal = () => {\r\n    \tthis.setState({ open: false });\r\n  \t};\r\n\r\n\r\n\trender() {\r\n\t\tconst cardArray = this.props.personajes.map((user, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Card \r\n\t\t\t\t\tkey={i} \r\n\t\t\t\t\timagen={this.props.personajes[i].imagen} \r\n\t\t\t\t\tnombre={this.props.personajes[i].nombre} \r\n\t\t\t\t\tanime={this.props.personajes[i].anime}\r\n\t\t\t\t\turl={this.props.personajes[i].url}\r\n\t\t\t\t\tonOpenModal={this.onOpenModal}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{cardArray}\r\n\t\t\t\t<Modal open={this.state.open} onClose={this.onCloseModal} little>\r\n\t\t\t\t\t<div className='tc modal'>\r\n\t\t\t\t\t\t<img className='img-modal' alt='imagen' src={require(`../img/${this.state.imagen}.jpg`)}/>\r\n\t\t\t\t\t\t<h2>{this.state.nombre}</h2>\r\n\t\t\t\t\t\t<p className='f4 tl'>{this.state.url}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst BarraBusqueda = ({campobusqueda, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t<input className='pa3 ba b--black bg-near-white' type='search' placeholder='buscar personajes' onChange={searchChange} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BarraBusqueda;","export const personajes = [\r\n\t{\r\n\t\timagen: 'ainz',\r\n\t\tnombre: 'Ainz Ooal Gown',\r\n\t\tanime: 'Overlord',\r\n\t\turl: 'Él es el maestro del gremio Ainz Ooal Gown y es considerado el superior de los Todopoderosos 41 Seres Supremos por los NPCs de la Gran Tumba de Nazarick. \\nSiendo una persona cautelosa y tacaña, Momonga siempre intenta planear y controlar los detalles, evitando cualquier accidente. Ya que él no subestima a sus oponentes, usualmente hace overkill. Luego de ser transferido a un nuevo mundo y convertirse en un verdadero ser no-muerto, Momonga no puede evitar volverse frío y calculador, sus emociones son reprimidas. \\nLeal a sus amigos y creaciones, desde que se convirtió en el Gobernante de Nazarick en el nuevo mundo, actúa con un cierto grado de nobleza para sus devotos seguidores. Momonga solo hace cosas que benefician a Nazarick o a él mismo, ya sea información o prestigio. Aunque si tiene un sentido de la justicia y no odia a los humanos tanto como sus seguidores, no siente ninguna conexión con ellos, y no sienta nada por sus muertes.'\r\n\t},\r\n\t{\r\n\t\timagen: 'elias',\r\n\t\tnombre: 'Elias Ainsworth',\r\n\t\tanime: 'Mahoutsukai no Yome',\r\n\t\turl: 'Él es un antiguo mago con características tanto humanas como de fae. A pesar de su apariencia, él es amable y cortéz con los humanos, y demuestra gran interés en ellos. Él entiende por qué los humanos sienten las emociones que sienten, pero nunca las ha experimentado por sí mismo. \\nUn día, él compra a Chise Hatori del mercado negro y la convierte en su aprendiz.'\r\n\t},\r\n\t{\r\n\t\timagen: 'esdeath',\r\n\t\tnombre: 'Esdeath',\r\n\t\tanime: 'Akame ga Kill!',\r\n\t\turl: 'Esdeath es un general de alto rango del Imperio, y la líder de los Jeagers. Disfruta torturando lentamente a sus enemigos. A pesar de sus acciones sádicas, ella en realidad tiene un corazón compasivo cuando se trata de las vidas de sus hombres y otros cercanos a ella. \\nEn japonés su nombre es Esudesu, es una broma con el significado de \"soy una S\" por lo sadistica que es.'\r\n\t},\r\n\t{\r\n\t\timagen: 'glenn',\r\n\t\tnombre: 'Glenn Radars',\r\n\t\tanime: 'Roku de Nashi Majutsu Koushi to Akashic Records',\r\n\t\turl: 'Glenn es el profesor sustituto de la clase de Sistine y Rumia, luego de que su profesor favorito se retirara. Él alguna vez fue un famoso asesino y fue el que salvó a Rumia Tingel antes del comienzo de la serie. Él era conocido como \"El Loco\", un asesino de magos trabajando para los Magos de la Corte Imperial de Alzano. \\nGlenn fue adoptado por Celica Arfonia luego de perder a su familia en un accidente. Después de un tiempo, ella pronto llegó a amarlo como familia. Ella comenzó a enseñarle todo lo que sabía de magia, lo cual lo fascinó. Incluso aunque él no tiene un fuerte sentido para la manipulación de maná y la reducción del canto, se le permitió ingresar a la Academia de Magia Imperial de Alzano a la edad de 11 y se graduó a los 15.'\r\n\t},\r\n\t{\r\n\t\timagen: 'gslayer',\r\n\t\tnombre: 'Goblin Slayer',\r\n\t\tanime: 'Goblin Slayer',\r\n\t\turl: 'El personaje principal de la serie, un experimentado aventurero de rango plata al que solo le interesa cazar goblins. Solo toma trabajos que involucren goblins y nada más. Su apariencia no es glamorosa o elegante por usar equipamiento que es visto como pobre para un aventurero de su rango. \\nSu estilo de combate favorece el pragmatisomo, tal como preparar trampas, usar sus armas contra ellos, y tomar cualquier ventaja que encuentre.'\r\n\t},\r\n\t{\r\n\t\timagen: 'iori',\r\n\t\tnombre: 'Iori Kitahara',\r\n\t\tanime: 'Grand Blue',\r\n\t\turl: 'Iori Kitahara se mudó a la tienda de buceo de su tío, Grand Blue, para empezar su vida universitaria. Él se une al club de buceo que usa Grand Blue como su base de operaciones. Iori se da cuenta de que su vida universitaria no va a ser lo que esperaba cuando termina yendo desnudo a su primera clase.'\r\n\t},\r\n\t{\r\n\t\timagen: 'kazuma',\r\n\t\tnombre: 'Satou Kazuma',\r\n\t\tanime: 'Kono Subarashii Sekai ni Shukufuku wo!',\r\n\t\turl: 'El protagonista. Un adolescente japonés de 16 años que se volvió un hikikomori obsecionado con los juegos después de que su corazón fuera destrozado por su amiga de la infancia durante la secundaria. Él es enviado a una realidad paralela después de morir por una reacción aguda al estrés, forzando a Aqua a ir con él despúes de que se irrita por su actitud. La clase de Kazuma es aventurero, a pesar de ser la clase más baja, le permite aprender varias habilidades de otras clases, aunque a un costo mayor. Con su habilidad, Kazuma aprende habilidades básicas como robo, arquería, detección de monstruos y magia básica.'\r\n\t},\r\n\t{\r\n\t\timagen: 'madara',\r\n\t\tnombre: 'Madara Uchiha',\r\n\t\tanime: 'Naruto Shippuden',\r\n\t\turl: 'Madara Uchiha fue un ninja legendario que lideró al clan Uchiha antes y después de la formación de Konoha. \\nAntes de la era de las aldeas ninja, Madara y su hermano menor, Izuna, eran considerados los miembros más talentosos del clan Uchiha. Incluso por los estándares de su clan, el chakra de Madara esra especialmente fuerte. Él creció constantemente compitiendo y entrenando con Izuna y en sus esfuerzos por subrepasar al otro, ambos ganaron su propio Mangekyo Sharingan. Con el poder del Mangekyo, los dos hermanos tomaron el control del clan, con Madara como líder. Bajo su liderazgo, el clan conquistó todo lo que se le cruzó. A causa de la serie de batallas interminables, Madara eventualmente comenzó a sufrir por el sobreuso del Mangekyo Sharingan, dejándolo ciego. Para recuperar su vista, tomó los ojos de Izuna para sí mismo, obteniendo un Mangekyo Sharingan \"eterno\" con el cual lideró al clan Uchiha a la prosperidad. \\nCon el pasar de los años, los Uchiha habían peleado con el igualmente poderoso clan Senju, y como tal, Madara tenía una interminable rivalidad con Hashirama Senju, líder del clan Senju. Para poner fin a la constante pelea, Hashirama se aproximó a los Uchiha con una oferta de paz. Aunque Madara nunca buscó la paz con los Senju, el resto de los Uchiha deseaban terminar con la pelea, y Madara no tuvo otra opción que aceptar. Los Senju, los Uchiha, y todos los clanes que habían conquistado se unieron para formar la aldea de Konoha. \\nTiempo después, los aldeanos de Konoha seleccionaron a Hashirama como el Primer Hokage para desgracia de Madara. Madara temía que Hashirama oprimiera a los Uchiha, e intentó reunir apoyo para desafiar su liderazgo. En vez de ayudarlo, los Uchiha le dieron la espalda, creyendo que él solo deseaba reavivar las llamas de la guerra. \\nPoco después de ser rechazado para la posición de Hokage y ser abandonado por su clan, Madara dejó la aldea, y buscó al Zorro de Nueve Colas. Más tarde regresó para desafíar a Hashirama a una batalla. Ellos pelearon en el sitio que algún día sería llamado el Valle del Fin, donde Madara fue derrotado, a pesar de tener al Zorro de Nueve Colas de su lado. El control del Zorro de Nueve Colas le fue arrebatado y Madara murió.'\r\n\t},\r\n\t{\r\n\t\timagen: 'megumin',\r\n\t\tnombre: 'Megumin',\r\n\t\tanime: 'Kono Subarashii Sekai ni Shukufuku wo!',\r\n\t\turl: 'Una archimaga que es descendiente de los demonios carmesíes; poderosos humanoides que poseen cabello negro y ojos rojos, y presentan características chuunibyou. Megumin solo conoce una habilidad, la increíblemente poderosa magia explosión, que la incapacita inmediatamente por el resto del día después de usarla, y se rehusa a aprender cualquier otra habilidad.'\r\n\t},\r\n\t{\r\n\t\timagen: 'mikasa',\r\n\t\tnombre: 'Mikasa Ackerman',\r\n\t\tanime: 'Shingeki no Kyojin',\r\n\t\turl: 'Mikasa es la hermana adoptiva de Eren y amiga de la infancia de Armin. Mikasa comparte un lazo inquebrantable con Eren debido a los eventos de su pasado, y se lanza a protegerlo siempre que está en peligro. Mikasa posee una increíble habilidad de pelea y fuerza incluso de niña. \\nEn su adolescencia, Mikasa es considerada un genio entre todos los novatos del ejército y es increíblemente ágil y hábil para el combate. Ella se preocupa constantemente por el bienestar de Eren y vive para protegerlo.'\r\n\t},\r\n\t{\r\n\t\timagen: 'milim',\r\n\t\tnombre: 'Milim Nava',\r\n\t\tanime: 'Tensei Shitara Slime Datta Ken',\r\n\t\turl: 'Rey Demonio Milim Nava. Ella es un dragonoide. Y la reina más fuerte. Su sobrenombre \"Destructora\" no es solo para mostrar. Ella es un Rey Demonio contra el que uno nunca debería pelear, apodada \"Destrucción\". Ella es una de los Reyes Demonio de las Ocho Estrellas.'\r\n\t},\r\n\t{\r\n\t\timagen: 'rem',\r\n\t\tnombre: 'Rem',\r\n\t\tanime: 'Re: Zero Kara Hajimeru Isekai Seikatsu',\r\n\t\turl: 'Rem es una de las maids gemelas trabajando para Roswal L Mathers. Ella habla de manera superficialmente educada y a veces actúa sin pensar. Ella tiene tanto respeto fanático como culpa hacia su hermana por el incidente de su pasado; a causa de esto, Rem tiende a verse a sí misma como inferior. \\nDespués de que Subaru la salva, ella se enamora profundamente de él, convirtiendose en uno de sus más leales seguidores. Rem se quedará con él sin importar lo que pase, incluso si Subaru se rechaza a sí mismo.'\r\n\t},\r\n\t{\r\n\t\timagen: 'rory',\r\n\t\tnombre: 'Rory Mercury',\r\n\t\tanime: 'GATE',\r\n\t\turl: 'Rory Mercury es una semi-diosa y apóstol de Emroy, el dios de la guerra, violencia y muerte. A pesar de su edad antediluviana, su apariencia es de unos 13 años. Similarmente, a pesar de su delicada y pequeña constitución, ella es ampliamente conocida como La Muerte Rory, Apóstol de Emroy, quien masacrará a sus enemigos sin piedad con su gigantezca alabarda. Su vestido de lolita gótica es el atuendo de una sacerdotiza. \\nRory tiene una personaldiad amistosa como se pudo ver cuando inmediatamente se hizo amiga de Youji Itami y comenzó a sentarse en su regazo. Sin embargo, no muestra piedad por sus enemigos como se pudo ver cuando masacró a unos bandidos sin remordimiento. En batalla, ella muestra una personalidad violenta y sádica, sin embargo, no es que no tenga sentido de la justicia, a menudo tomando como objetivos a bandidos y criminales, mientras que generalmente es amistosa hacia la gente común.'\r\n\t},\r\n\t{\r\n\t\timagen: 'satan',\r\n\t\tnombre: 'Satan',\r\n\t\tanime: 'Hataraku Maou-sama',\r\n\t\turl: 'Sadao es el Rey Demonio de Ente Isla. Al ser confrontado por la Heroína Emilia y los humanos, se ve forzado a retirarse y terminó en el mundo humano de Japón del presente con uno de sus generales, Ashiya, y cambió a forma humana. Para sobrevivir, trabaja a tiempo parcial en MgRonalds y eventualmente es promovido a trabajador de tiempo completo.'\r\n\t},\r\n\t{\r\n\t\timagen: 'shalltear',\r\n\t\tnombre: 'Shalltear Bloodfallen',\r\n\t\tanime: 'Overlord',\r\n\t\turl: 'Shalltear es un vampiro real y la guardiana de los primeros tres pisos de la Gran Tumba de Nazarick. Ella fue creada por Peroroncino. \\nShalltear tiene una personalidad muy coqueta y es muy abierta con sus preferencias sexuales, a menudo para incomodidad de otros personajes. A pesar de su desvergonzada apariencia, ella puede ser bastante inocente sobre ciertas cosas. Tiene un complejo por su pequeña figura, lo que intenta cubrir usando relleno en el pecho. \\nComo vampiro real, Shalltear es extremadamente orgullosa y se toma su posición como Guardiana de Piso muy seriamente. No tiene paciencia para los fallos y a menudo explota en ataques de ira cuando se presenta una situación desfavorable. Ella no dudará en matar a cualquier sirviente que la decepcione; sin embargo, no castigará a otros por fallar en tareas que son imposibles desde el inicio. \\nShalltear es completamente leal a Momonga y también es la rival amorosa de Albedo. Disfruta mucho ser capaz de probar su valía y fantasea sobre las alabanzas que espera recibir. Cuando la situación no va a su favor, entra en pánico por la reprimenda que cree recibirá.'\r\n\t},\r\n\t{\r\n\t\timagen: 'tanya',\r\n\t\tnombre: 'Tanya von Degurechaff',\r\n\t\tanime: 'Youjo Senki',\r\n\t\turl: 'Tanya Degurechaff es una linda, adorable y bien parecida niña. Pero por dentro, ambiciona poder, es amoral, implacable, sádica y temperamental. Especialmente cuando batalla contra sus enemigos, ella muestra crueldad absoluta y sed de sangre solo para completar sus misiones. Tanya también desaprueba fuertemente el fracaso y la desobediencia de sus subordinados. Ella es leal a su propio trabajo y siempre quiere terminar lo más pronto posible. Tanya nunca deja que otros la discriminen por su apariencia por lo rápido que sube por los rangos militares.'\r\n\t}\r\n\r\n];","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport BarraBusqueda from '../components/BarraBusqueda';\r\nimport { personajes } from '../personajes';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tpersonajes: personajes,\r\n\t\t\tcampobusqueda: '',\r\n\t\t}\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ campobusqueda: event.target.value });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { personajes, campobusqueda } = this.state;\r\n\t\tconst pjFiltrados = personajes.filter(personaje => {\r\n\t\t\treturn personaje.nombre.toLowerCase().includes(campobusqueda.toLowerCase());\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>Personajes</h1>\r\n\t\t\t\t<BarraBusqueda searchChange={this.onSearchChange}/>\r\n\t\t\t\t<CardList personajes={pjFiltrados}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}